# version: '3.8'

# frontend: port 5173
# mysql: port 3307 DONE
# postgres_schedule: port 5433 DONE
# postgres_doctor: port 5434 DONE
# postgres_consult: port 5435 DONE

# book consult COMPOSITE port:5100
# settle post consult COMPOSITE port: 5200
# symptom checker COMPOSITE port: 4000 DONE

# dyte wrapper: port 5000
# consultation_history: port 5001 DONE
# medicine_inventory: port 5002 DONE
# delivery_detail: port 5003 DONE
# notification: port 5004 DONE
# order: port 5005 DONE
# schedule: port 5006 DONE
# doctor: port 5007 DONE
# consult: port 5008 DONE

# minilm : port 4001 (hosted on localhost on vanness laptop via port 4001)
# openai: port 4002 DONE

services:
    # gateway:
    #     container_name: teledocy-gateway-1
    #     build: ./gateway
    #     ports:
    #         - '4000:4000'
    #     networks:
    #         - app-network
    # frontend:
    #     build:
    #         context: ./vite-project
    #         dockerfile: Dockerfile
    #     ports:
    #         - '5173:5173'
    #     container_name: vite-frontend
    #     networks:
    #         - app-network

    dyte-wrapper:
        build:
            context: ./wrapper/dyte
            dockerfile: Dockerfile
        ports:
            - '5000:5000'
        environment:
            - PORT=5000
        env_file:
            - .env

    #FOR SQL
    mysql:
        image: mysql:8.0
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
        ports:
            - '3307:3306'
        volumes:
            - mysql_data:/var/lib/mysql
            - ./microservices/consultation_history/consultation_history.sql:/docker-entrypoint-initdb.d/consultation_history.sql
            - ./microservices/medicine_inventory/medicine_inventory.sql:/docker-entrypoint-initdb.d/medicine_inventory.sql
            - ./microservices/delivery_detail/delivery_detail.sql:/docker-entrypoint-initdb.d/delivery_detail.sql
            - ./microservices/order/order.sql:/docker-entrypoint-initdb.d/order.sql
            - ./microservices/notification/notification.sql:/docker-entrypoint-initdb.d/notification.sql

        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
            interval: 10s
            timeout: 5s
            retries: 5

    postgres_schedule:
        image: postgres:17
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: schedule
        ports:
            - '5433:5432'
        volumes:
            - postgres_schedule_data:/var/lib/postgresql/data
            - ./microservices/schedule/schedule.sql:/docker-entrypoint-initdb.d/schedule.sql

    postgres_doctor:
        image: postgres:17
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: doctor
        ports:
            - '5434:5432'
        volumes:
            - postgres_doctor_data:/var/lib/postgresql/data
            - ./microservices/doctor/doctor.sql:/docker-entrypoint-initdb.d/doctor.sql

    postgres_consult:
        image: postgres:17
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: consult
        ports:
            - '5435:5432'
        volumes:
            - postgres_consult_data:/var/lib/postgresql/data
            - ./microservices/consult/consult.sql:/docker-entrypoint-initdb.d/consult.sql

    bookconsult:
        build:
            context: ./microservices/book_consult
            dockerfile: book_consult.Dockerfile
        ports:
            - '5100:5100'
        depends_on:
            - mysql
            - postgres_schedule
            - postgres_doctor
            - consultationhistory
            - doctor
            - schedule

    consultationhistory:
        build:
            context: ./microservices/consultation_history
            dockerfile: consultation_history.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5001:5001'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/consultationHistory

    medicine_inventory:
        build:
            context: ./microservices/medicine_inventory
            dockerfile: medicine_inventory.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5002:5002'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/medicineInventory

    delivery_detail:
        build:
            context: ./microservices/delivery_detail
            dockerfile: delivery_detail.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5003:5003'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/deliveryDetail

    notification:
        build:
            context: ./microservices/notification
            dockerfile: Dockerfile
        depends_on:
            mysql:
                condition: service_healthy
        ports:
            - '5004:5004'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/notification
        env_file:
            - .env

    openai_service:
        build:
            context: ./microservices/openai_service
            dockerfile: Dockerfile
        ports:
            - '4002:4002'
        env_file:
            - .env # this loads vanness' OPENAI_API_KEY from .env file

    symptom_checker:
        build:
            context: ./microservices/symptom_checker
            dockerfile: Dockerfile
        depends_on:
            - consultationhistory
            - openai_service
        ports:
            - '4000:4000'
        # environment:
        #     - OPENAI_MICROSERVICE_URL=http://openai_service:4002/generate
        #     - MINILM_TOKENIZER_URL=http://host.docker.internal:4001/tokenize

    order:
        build:
            context: ./microservices/order
            dockerfile: order.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5005:5005'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/orderdb

    schedule:
        build:
            context: ./microservices/schedule
            dockerfile: schedule.Dockerfile
        depends_on:
            - postgres_schedule
        ports:
            - '5006:5006'
        environment:
            - DB_URI=postgresql+psycopg2://postgres:postgres@postgres_schedule:5432/schedule

    doctor:
        build:
            context: ./microservices/doctor
            dockerfile: doctor.Dockerfile
        depends_on:
            - postgres_doctor
        ports:
            - '5007:5007'
        environment:
            - DB_URI=postgresql+psycopg2://postgres:postgres@postgres_doctor:5432/doctor

    consult:
        build:
            context: ./microservices/consult
            dockerfile: consult.Dockerfile
        depends_on:
            - postgres_consult
        ports:
            - '5008:5008'
        environment:
            - DB_URI=postgresql+psycopg2://postgres:postgres@postgres_consult:5432/consult

volumes:
    mysql_data:
    postgres_schedule_data:
    postgres_doctor_data:
    postgres_consult_data:

networks:
    app-network:
        driver: bridge
