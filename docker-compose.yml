# version: '3.8'

# frontend: port 5173
# mysql: port 3307 DONE
# postgres: port 5432
# dyte wrapper: port 5000
# consultation_history: port 5001 DONE
# medicine_inventory: port 5002 DONE
# delivery_detail: port 5003 DONE
# notification: port 5004
# order: port 5005 DONE
# schedule: port 5006
# doctor: port 5007
# minilm: port 4001
# openai: port 4002

services:
    # gateway:
    #     container_name: teledocy-gateway-1
    #     build: ./gateway
    #     ports:
    #         - '4000:4000'
    #     networks:
    #         - app-network
    # frontend:
    #     build:
    #         context: ./vite-project
    #         dockerfile: Dockerfile
    #     ports:
    #         - '5173:5173'
    #     container_name: vite-frontend
    #     networks:
    #         - app-network

    #FOR SQL
    mysql:
        image: mysql:8.0
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
        ports:
            - '3307:3306'
        volumes:
            - mysql_data:/var/lib/mysql
            - ./microservices/consultation_history/consultation_history.sql:/docker-entrypoint-initdb.d/consultation_history.sql
            - ./microservices/medicine_inventory/medicine_inventory.sql:/docker-entrypoint-initdb.d/medicine_inventory.sql
            - ./microservices/delivery_detail/delivery_detail.sql:/docker-entrypoint-initdb.d/delivery_detail.sql
            # - ./microservices/notification/notification.sql:/docker-entrypoint-initdb.d/notification.sql
            - ./microservices/order/order.sql:/docker-entrypoint-initdb.d/order.sql
            - ./microservices/consultDB/consultDB.sql:/docker-entrypoint-initdb.d/consultDB.sql

    consultationhistory:
        build:
            context: ./microservices/consultation_history
            dockerfile: consultation_history.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5001:5001'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/consultationHistory

    medicine_inventory:
        build:
            context: ./microservices/medicine_inventory
            dockerfile: medicine_inventory.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5002:5002'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/medicineInventory

    delivery_detail:
        build:
            context: ./microservices/delivery_detail
            dockerfile: delivery_detail.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5003:5003'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/deliveryDetail

    # notification:
    #     build:
    #         context: ./microservices/notification
    #         dockerfile: notification.Dockerfile
    #     depends_on:
    #         - mysql
    #     ports:
    #         - '5004:5004'
    #     environment:
    #         - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/notification

    order:
        build:
            context: ./microservices/order
            dockerfile: order.Dockerfile
        depends_on:
            - mysql
        ports:
            - '5005:5005'
        environment:
            - DB_URI=mysql+mysqlconnector://root:root@mysql:3306/order

    # postgres:
    #     image: postgres:17
    #     restart: always
    #     environment:
    #         POSTGRES_USER: postgres
    #         POSTGRES_PASSWORD: postgres
    #         POSTGRES_DB: schedule
    #     ports:
    #         - '5432:5432'
    #     volumes:
    #         - postgres_data:/var/lib/postgresql/data
    #         - ./microservices/schedule/schedule.sql:/docker-entrypoint-initdb.d/schedule.sql
    #         - ./microservices/doctor/doctor.sql:/docker-entrypoint-initdb.d/doctor.sql

    #     networks:
    #         - app-network

    # schedule:
    #     build:
    #         context: ./microservices/schedule
    #         dockerfile: schedule.Dockerfile
    #     depends_on:
    #         - postgres
    #     ports:
    #         - '5006:5000'
    #     environment:
    #         - DB_URI=postgresql+psycopg2://postgres:postgres@postgres:5432/schedule
    #     networks:
    #         - app-network

    # doctor:
    #     build:
    #         context: ./microservices/doctor
    #         dockerfile: doctor.Dockerfile
    #     depends_on:
    #         - postgres
    #     ports:
    #         - '5007:5000'
    #     environment:
    #         - DB_URI=postgresql+psycopg2://postgres:postgres@postgres:5432/doctor
    #     networks:
    #         - app-network

    consultDB:
        build: 
            context: ./microservices/consultDB 
            dockerfile: consultDB.Dockerfile

volumes:
    mysql_data:
    postgres_data:

networks:
    app-network:
        driver: bridge
